@{
    ViewBag.Title = "Index";
}

<h2>Popular Producers</h2>
@Html.Hidden("DisplayProducerUrl", Url.Action("DisplayProducer", "Producer"))
@Scripts.Render("~/bundles/movieDbProducer")


<hr />
@(Html.Kendo().Grid<MovieDb.ViewModels.ProducerViewModel>()
    .Name("grid")
    .ToolBar(toolbar =>
                        {
                            toolbar.Template(@<text>
                                <b>Search for producers:</b>
                                @(Html.Kendo().AutoComplete()
                                          .Name("producerSearch")
                                          .DataTextField("Name")
                                          .Filter("contains")
                                          .MinLength(2)
                                          .DataSource(source =>
                                          {
                                              source.Read(read =>
                                              {
                                                  read.Action("GetProducers", "Producer")
                                                      .Data("onAdditionalData");

                                              })
                                              .ServerFiltering(true);
                                          }).Events(e => e.Select("onProducerSelect"))
                                )
                                @Html.ActionLink("Create New", "CreateEdit", "Producer", new { @class = "btn btn-default" })

                            </text>);
                        })
                                        .HtmlAttributes(new { style = "height:400px;" })
                                        .Columns(columns =>
                                        {
                                            columns.Bound(e => e.Name).Width(200);
                                            columns.Bound(e => e.Sex).Width(50);
                                            columns.Bound(e => e.DateOfBirth).Width(150);
                                            columns.Bound(e => e.Bio);


                                        })
                                                .DataSource(dataSource => dataSource
                                                .Ajax()
                                                .Read(read => read.Action("QueryLatestProducers", "Producer"))
                                                .Model(m => m.Id(c => c.RowId))
                                            )
                                                .Scrollable().Pageable(p => p.Refresh(true)
                                                                            .PageSizes(true)
                                                                    .ButtonCount(5))
                                                .Selectable(selectable => selectable
                                                .Mode(GridSelectionMode.Single)
                                                .Type(GridSelectionType.Row))
                                                .Events(events => events
                                                        .Change("onProducerGridChange")
                                                        )
)
